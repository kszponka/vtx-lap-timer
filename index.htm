<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover" />
  <meta name="theme-color" content="#0b0d10" />
  <title>RX5808 Panel</title>
  <style>
    :root{
      --bg:#0b0d10; --bg-elev:#11151b; --card:#12161c; --fg:#e7edf3; --muted:#9aa6b2; --border:#1f2530;
      --accent:#5ad1ff; --radius:14px; --shadow:0 10px 24px rgba(0,0,0,.25); --tap:44px; --mono:ui-monospace,Menlo,Consolas,monospace;
    }
    body{margin:0;background:var(--bg);color:var(--fg);font:500 16px/1.45 system-ui,-apple-system,Segoe UI,Roboto,Inter,Arial,sans-serif}
    .app{display:grid;grid-template-rows:auto auto 1fr;min-height:100dvh}
    header{display:flex;justify-content:space-between;align-items:center;padding:10px 14px;background:var(--bg-elev);border-bottom:1px solid var(--border)}
    .status{display:flex;gap:8px;color:var(--muted);font-size:13px}
    .led{width:10px;height:10px;border-radius:50%;background:#666}
    .led.ok{background:#80ed99}

    /* TOP: exactly three buttons */
    .topbar{display:flex;gap:8px;padding:8px 12px;background:var(--bg-elev);border-bottom:1px solid var(--border);position:sticky;top:0;z-index:10}
    .topbar button{flex:1;min-height:var(--tap);border:1px solid var(--border);border-radius:999px;background:var(--card);color:var(--muted)}
    .topbar button.active{color:var(--fg);border-color:var(--accent)}

    /* Tab-like buttons (same look as top bar buttons) */
    .tabbtn{min-height:var(--tap);border:1px solid var(--border);border-radius:999px;background:var(--card);color:var(--muted);padding:8px 14px}
    .tabbtn.primary{color:var(--fg);border-color:var(--accent)}

    main{padding:12px}
    .card{background:var(--card);border:1px solid var(--border);border-radius:var(--radius);padding:12px;margin-bottom:12px}
    .list{display:grid;gap:8px}
    .item{padding:8px;border:1px solid var(--border);border-radius:12px;background:var(--bg-elev)}
    .row{display:flex;gap:8px;align-items:center;flex-wrap:wrap}
    .right{margin-left:auto}
    .mono{font-family:var(--mono)}

    .toast{position:fixed;left:50%;bottom:20px;transform:translateX(-50%);background:var(--card);padding:8px 12px;border-radius:999px;opacity:0;transition:.2s}
    .toast.show{opacity:1}

    .modal{position:fixed;inset:0;background:rgba(0,0,0,.45);display:none;align-items:flex-end;justify-content:center}
    .modal.show{display:flex}
    .sheet{width:100%;max-width:900px;max-height:85dvh;background:var(--card);border:1px solid var(--border);border-radius:20px 20px 0 0;box-shadow:var(--shadow);overflow:auto;padding:14px}

    /* Channel grid */
    .ch-grid{display:grid;grid-template-columns:repeat(8,1fr);gap:6px;margin-top:8px}
    .ch{aspect-ratio:1/1;border:1px solid var(--border);border-radius:10px;background:var(--bg-elev);display:flex;align-items:center;justify-content:center;font-weight:700;cursor:pointer}
    .ch.active{outline:2px solid var(--accent)}
  </style>
</head>
<body>
<div class="app">
  <header>
    <div class="brand">RX5808 Panel</div>
    <div class="status"><span class="led" id="led"></span><span id="statusText">offline</span><span id="channelBadge">E1</span></div>
  </header>

  <!-- ONLY THREE BUTTONS ON TOP: History, Settings, NewRace -->
  <div class="topbar" role="tablist" aria-label="Navigation">
    <button id="btnTabHistory" role="tab">History</button>
    <button id="btnTabSettings" role="tab">Settings</button>
    <button id="btnTabNew" role="tab">NewRace</button>
  </div>

  <main id="view">
    <!-- HISTORY -->
    <section data-route="history" hidden>
      <div class="card">
        <h2>History</h2>
        <div id="races-history" class="list"></div>
      </div>
    </section>

    <!-- SETTINGS -->
    <section data-route="settings" hidden>
      <div class="card">
        <h2>Settings</h2>
        <div class="row"><div>Channel:</div><div class="mono" id="channelLabel">E1</div></div>
        <div class="ch-grid" id="chGridE" aria-label="Band E channels"></div>
      </div>
      <div class="card">
        <h3>Calibration</h3>
        <div class="row" style="gap:8px">
          <button id="btnCalStart" class="tabbtn">Start Calibration</button>
          <button id="btnCalStop" class="tabbtn">Stop Calibration</button>
        </div>
        <div class="row" style="margin-top:8px">
          <div><small>Baseline</small><div class="mono" id="calBase">-- dB</div></div>
          <div><small>Peak</small><div class="mono" id="calPeak">-- dB</div></div>
          <div class="right"><small>Gate</small><div class="mono" id="calGate">-- dB</div></div>
        </div>
      </div>
    </section>

    <!-- NEW RACE -->
    <section data-route="new" hidden>
      <div class="card">
        <h2>New Race</h2>
        <div class="row">
          <label>Laps: <input id="lapsTarget" type="number" min="1" value="5" style="width:80px"></label>
          <label>Start delay: <input id="startDelay" type="number" min="0" value="2" style="width:80px"> s</label>
          <label>Min lap (s): <input id="minLap" type="number" min="1" step="0.1" value="7.0" style="width:90px"></label>
        </div>
        <div class="row" style="margin-top:8px; gap:8px">
          <button id="btnStart" class="tabbtn primary">Start</button>
          <button id="btnStop" class="tabbtn">Stop</button>
        </div>
      </div>
      <div class="card">
        <h3>Live</h3>
        <div class="row"><div><small>Lap</small><div id="liveLap" class="mono">-</div></div>
             <div><small>Last</small><div id="liveLast" class="mono">--.-s</div></div>
             <div><small>Best</small><div id="liveBest" class="mono">--.-s</div></div>
             <div class="right"><small>Total</small><div id="liveTotal" class="mono">00:00.0</div></div></div>
        <div id="lastLaps" class="list" style="margin-top:8px"></div>
      </div>
    </section>
  </main>
</div>

<div class="toast" id="toast" role="status" aria-live="polite"></div>

<div class="modal" id="raceModal" aria-hidden="true" role="dialog" aria-label="Race details">
  <div class="sheet">
    <div class="row"><h3 id="raceTitle">Race</h3><div class="right"></div></div>
    <div class="item" id="raceSummary"></div>
    <div class="list" id="raceLaps"></div>
    <div class="row" style="margin-top:8px;justify-content:flex-end"><button id="closeModal" class="tabbtn">Close</button></div>
  </div>
</div>

<script>
const $=s=>document.querySelector(s),$$=s=>[...document.querySelectorAll(s)];

/* ---------------- Router: three tabs ---------------- */
const tabs = { history: $('#btnTabHistory'), settings: $('#btnTabSettings'), new: $('#btnTabNew') };
Object.entries(tabs).forEach(([key,btn])=> btn.addEventListener('click', ()=> go(key)) );
function go(name){ location.hash = `#/${name}`; }
function applyRoute(){ const r = location.hash.replace(/^#\/?/, '') || 'history'; $$('section[data-route]').forEach(sec => sec.hidden = (sec.dataset.route!==r)); Object.entries(tabs).forEach(([k,btn])=> btn.classList.toggle('active', k===r)); }
addEventListener('hashchange', applyRoute); if(!location.hash) location.hash = '#/history'; applyRoute();

// ---------- Channel grid: Band E only (E1..E8)
const chGrid = document.getElementById('chGridE');
const channelsE = Array.from({length:8}).map((_,i)=>`E${i+1}`);
let currentCh = 'E1';
if(chGrid){
  channelsE.forEach((ch,idx)=>{
    const div=document.createElement('div');
    div.className='ch';
    div.textContent=ch;
    if(ch===currentCh) div.classList.add('active');
    div.addEventListener('click',()=>{
      currentCh=ch;
      document.getElementById('channelLabel').textContent=ch;
      document.getElementById('channelBadge').textContent=ch;
      [...chGrid.children].forEach((c,i)=> c.classList.toggle('active', i===idx));
      toast(`Channel set to ${ch}`);
      // TODO: send to device via WS/REST
    });
    chGrid.appendChild(div);
  });
}

/* ---------------- History: list + details modal ---------------- */
const historyEl = $('#races-history');
function renderHistory(list){ historyEl.innerHTML=''; list.forEach(r=>{ const it=document.createElement('div'); it.className='item'; it.innerHTML=`<div class="row"><b>#${r.id}</b><span class="mono">${new Date(r.timestamp).toLocaleString()}</span><span class="right">Best ${(r.best_ms/1000).toFixed(2)}s</span></div>`; it.addEventListener('click', ()=> openRaceDetail(r)); historyEl.appendChild(it); }); }

function openRaceDetail(r){
  $('#raceTitle').textContent = `Race #${r.id}`;
  const total = r.laps.reduce((a,l)=>a+l.lap_ms,0);
  const best = Math.min(...r.laps.map(l=>l.lap_ms));
  $('#raceSummary').innerHTML = `
    <div class="row">
      <div><small>Start</small><div class="mono">${new Date(r.timestamp).toLocaleString()}</div></div>
      <div><small>Laps</small><div class="mono">${r.laps.length}</div></div>
      <div><small>Best</small><div class="mono">${(best/1000).toFixed(2)}s</div></div>
      <div class="right"><small>Total</small><div class="mono">${fmtDur(total)}</div></div>
    </div>`;
  const list = $('#raceLaps'); list.innerHTML='';
  r.laps.forEach((lap,i)=>{ const it=document.createElement('div'); it.className='item'; it.textContent = `Lap ${i+1}: ${(lap.lap_ms/1000).toFixed(2)}s`; list.appendChild(it); });
  $('#raceModal').classList.add('show'); $('#raceModal').setAttribute('aria-hidden','false');
}
$('#closeModal').addEventListener('click', ()=>{ $('#raceModal').classList.remove('show'); $('#raceModal').setAttribute('aria-hidden','true'); });

/* ---------------- New Race: mocked laps on Start + Stop ---------------- */
let simTimer=null, simRunning=false;
$('#btnStart').addEventListener('click', ()=>{
  if(simRunning) return; simRunning=true; $('#btnStart').classList.add('primary'); $('#btnStop').classList.remove('primary');
  $('#lastLaps').innerHTML=''; updateLive({lap:0,last_ms:0,best_ms:0,total_ms:0});
  const lapsN = Math.max(1, +$('#lapsTarget').value||5);
  const delay0 = Math.max(0, +$('#startDelay').value||0)*1000;
  const minLap = Math.round((+$('#minLap').value||7)*1000);
  const race = { id: Math.floor(1000+Math.random()*9000), timestamp: Date.now(), laps: [] };
  let best=1e9, total=0, i=0;
  function tick(){
    if(!simRunning) return; // stopped
    if(i===0 && delay0){ toast(`Start in ${Math.round(delay0/1000)}s`); simTimer=setTimeout(()=>{ i=1; tick(); }, delay0); return; }
    const ms = Math.max(minLap, Math.round(11000 + Math.random()*4000));
    race.laps.push({ lap_ms: ms }); best = Math.min(best, ms); total += ms; i++;
    pushLastLap(ms); updateLive({lap:i,last_ms:ms,best_ms:best,total_ms:total});
    if(!simRunning) return;
    if(i<lapsN){ simTimer=setTimeout(tick, 300 + Math.random()*300); }
    else { finish(); }
  }
  function finish(){
    simRunning=false; $('#btnStop').classList.remove('primary');
    race.best_ms = best; race.total_ms = total; race.pilot = '—';
    historyData.unshift(race); renderHistory(historyData);
    toast('Race saved');
  }
  tick();
});

$('#btnStop').addEventListener('click', ()=>{
  if(!simRunning) return; simRunning=false; if(simTimer) clearTimeout(simTimer); $('#btnStop').classList.add('primary'); $('#btnStart').classList.remove('primary'); toast('Stopped');
});

function pushLastLap(ms){ const d=document.createElement('div'); d.className='item'; d.textContent=`Lap ${$('#lastLaps').children.length+1}: ${(ms/1000).toFixed(2)}s`; $('#lastLaps').prepend(d); while($('#lastLaps').children.length>5) $('#lastLaps').lastChild.remove(); }
function updateLive({lap,last_ms,best_ms,total_ms}){ $('#liveLap').textContent=lap??'-'; $('#liveLast').textContent=last_ms?fmtSec(last_ms/1000):'--.-s'; $('#liveBest').textContent=best_ms?fmtSec(best_ms/1000):'--.-s'; $('#liveTotal').textContent=total_ms?fmtDur(total_ms):'00:00.0'; }

/* ---------------- Calibration (mock) ---------------- */
let calTimer=null, calRunning=false, base=0, peak=0;
$('#btnCalStart').addEventListener('click', ()=>{ if(calRunning) return; calRunning=true; base=40+rand(6); peak=60+rand(10); updateCal(); calLoop(); toast('Calibration started'); });
$('#btnCalStop').addEventListener('click', ()=>{ calRunning=false; if(calTimer) clearTimeout(calTimer); toast('Calibration stopped'); });
function calLoop(){ if(!calRunning) return; peak = Math.max(peak, 70+rand(20)); $('#calBase').textContent = base+" dB"; $('#calPeak').textContent = peak+" dB"; $('#calGate').textContent = Math.round((base+peak)/2)+" dB"; calTimer=setTimeout(calLoop, 500); }
function updateCal(){ $('#calBase').textContent = base+" dB"; $('#calPeak').textContent = peak+" dB"; $('#calGate').textContent = Math.round((base+peak)/2)+" dB"; }

/* ---------------- Demo data ---------------- */
function fmtSec(s){ return (Math.round(s*100)/100).toFixed(2)+'s'; }
function fmtDur(ms){ const t=Math.floor(ms/100); const cs=t%10; const s=Math.floor(t/10)%60; const m=Math.floor(t/600); return `${String(m).padStart(2,'0')}:${String(s).padStart(2,'0')}.${cs}`; }
function generateMockLaps(n){ return Array.from({length:n}).map(()=>({ lap_ms: Math.round(10000 + Math.random()*5000) })); }
function rand(n){ return Math.floor(Math.random()*n); }
const historyData = (function(){ const now=Date.now(); return Array.from({length:6}).map((_,i)=>({ id:60-i, timestamp: now - i*3600_000, best_ms: 12000+i*200, total_ms: 150000+i*1000, pilot:['Neo','Kira','Max'][i%3], laps: generateMockLaps(10+ (i%5)) })); })();
renderHistory(historyData);

/* ---------------- Toast ---------------- */
function toast(msg,t=1500){ const el=$('#toast'); el.textContent=msg; el.classList.add('show'); clearTimeout(el._t); el._t=setTimeout(()=>el.classList.remove('show'), t); }
</script>
</body>
</html>
